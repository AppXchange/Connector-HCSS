namespace Connector.HeavyJob.v1;
using Connector.HeavyJob.v1.AdvancedBudgetCustomCostTypeItem;
using Connector.HeavyJob.v1.AdvancedBudgetCustomCostTypeItem.Create;
using Connector.HeavyJob.v1.AdvancedBudgetMaterial;
using Connector.HeavyJob.v1.AdvancedBudgetMaterial.Create;
using Connector.HeavyJob.v1.AdvancedBudgetSubcontract;
using Connector.HeavyJob.v1.AdvancedBudgetSubcontract.Create;
using Connector.HeavyJob.v1.Attachment;
using Connector.HeavyJob.v1.Attachment.Create;
// using Connector.HeavyJob.v1.BulkCreateJobsRequest;
// using Connector.HeavyJob.v1.BulkCreateJobsRequest.Create;
// using Connector.HeavyJob.v1.BulkCreateJobsRequests;
// using Connector.HeavyJob.v1.BulkCreateJobsRequests.Create;
using Connector.HeavyJob.v1.BusinessUnitPreference;
using Connector.HeavyJob.v1.BusinessUnitPreference.Update;
using Connector.HeavyJob.v1.ChangeOrder;
using Connector.HeavyJob.v1.ChangeOrder.Create;
using Connector.HeavyJob.v1.ChangeOrder.Delete;
using Connector.HeavyJob.v1.ChangeOrder.Update;
using Connector.HeavyJob.v1.CostAdjustments;
using Connector.HeavyJob.v1.CostAdjustments.Create;
using Connector.HeavyJob.v1.CostAdjustments.Delete;
using Connector.HeavyJob.v1.CostAdjustments.Update;
using Connector.HeavyJob.v1.CostCategories;
using Connector.HeavyJob.v1.CostCategories.Create;
using Connector.HeavyJob.v1.CostCodeCosts;
using Connector.HeavyJob.v1.CostCodeCosts.Update;
using Connector.HeavyJob.v1.CostCodeProgress;
using Connector.HeavyJob.v1.CostCodeProgress.Create;
using Connector.HeavyJob.v1.CostCodes;
using Connector.HeavyJob.v1.CostCodes.Create;
using Connector.HeavyJob.v1.CostCodes.Update;
using Connector.HeavyJob.v1.CostCodeTags;
using Connector.HeavyJob.v1.CostCodeTags.Create;
using Connector.HeavyJob.v1.CostCodeTags.Delete;
using Connector.HeavyJob.v1.CostCodeTags.Update;
using Connector.HeavyJob.v1.CostCodeTransaction;
using Connector.HeavyJob.v1.CostCodeTransaction.Create;
using Connector.HeavyJob.v1.CostCodeTransactionAdjustment;
using Connector.HeavyJob.v1.CostCodeTransactionAdjustment.Create;
using Connector.HeavyJob.v1.CustomCostTypeInstalled;
using Connector.HeavyJob.v1.CustomCostTypeInstalled.Create;
using Connector.HeavyJob.v1.CustomCostTypeItemReceived;
// using Connector.HeavyJob.v1.CustomCostTypeItemReceived.Update;
using Connector.HeavyJob.v1.CustomCostTypeItems;
using Connector.HeavyJob.v1.CustomCostTypeItems.Create;
using Connector.HeavyJob.v1.CustomCostTypeItems.Delete;
using Connector.HeavyJob.v1.CustomCostTypeItems.Update;
// using Connector.HeavyJob.v1.CustomCostTypeReceived;
// using Connector.HeavyJob.v1.CustomCostTypeReceived.Create;
using Connector.HeavyJob.v1.Diaries;
// using Connector.HeavyJob.v1.Diaries.Create;
using Connector.HeavyJob.v1.Diary;
using Connector.HeavyJob.v1.Diary.Create;
using Connector.HeavyJob.v1.EmployeeHours;
using Connector.HeavyJob.v1.Employees;
using Connector.HeavyJob.v1.Employees.Create;
using Connector.HeavyJob.v1.Employees.Delete;
using Connector.HeavyJob.v1.Equipment;
using Connector.HeavyJob.v1.Equipment.Create;
using Connector.HeavyJob.v1.Equipment.Update;
using Connector.HeavyJob.v1.EquipmentHours;
using Connector.HeavyJob.v1.EquipmentHours.Create;
using Connector.HeavyJob.v1.EquipmentType;
using Connector.HeavyJob.v1.EquipmentType.Create;
using Connector.HeavyJob.v1.JobCostCustomCost;
using Connector.HeavyJob.v1.JobCostCustomCost.Create;
using Connector.HeavyJob.v1.JobCosts;
using Connector.HeavyJob.v1.JobCosts.Create;
using Connector.HeavyJob.v1.JobCostsToDate;
using Connector.HeavyJob.v1.JobCostsToDate.Create;
using Connector.HeavyJob.v1.JobCustomCostTypeItem;
using Connector.HeavyJob.v1.JobCustomCostTypeItem.Create;
using Connector.HeavyJob.v1.JobCustomCostTypeItem.Delete;
using Connector.HeavyJob.v1.JobCustomCostTypeItem.Update;
using Connector.HeavyJob.v1.JobEmployees;
using Connector.HeavyJob.v1.JobEmployees.Delete;
using Connector.HeavyJob.v1.JobEmployees.Update;
using Connector.HeavyJob.v1.JobEquipment;
using Connector.HeavyJob.v1.JobEquipment.Delete;
using Connector.HeavyJob.v1.JobEquipment.Update;
using Connector.HeavyJob.v1.JobMaterial;
using Connector.HeavyJob.v1.JobMaterial.Create;
using Connector.HeavyJob.v1.JobMaterial.Delete;
using Connector.HeavyJob.v1.JobMaterial.Update;
using Connector.HeavyJob.v1.Jobs;
using Connector.HeavyJob.v1.Jobs.Create;
using Connector.HeavyJob.v1.Jobs.Update;
using Connector.HeavyJob.v1.JobSubcontract;
using Connector.HeavyJob.v1.JobSubcontract.Create;
using Connector.HeavyJob.v1.JobSubcontract.Delete;
using Connector.HeavyJob.v1.JobSubcontract.Update;
using Connector.HeavyJob.v1.MaterialPurchaseOrderDetails;
using Connector.HeavyJob.v1.MaterialPurchaseOrderDetails.Create;
using Connector.HeavyJob.v1.MaterialPurchaseOrderDetails.Update;
using Connector.HeavyJob.v1.Materials;
using Connector.HeavyJob.v1.Materials.Create;
using Connector.HeavyJob.v1.Materials.Delete;
using Connector.HeavyJob.v1.Materials.Update;
using Connector.HeavyJob.v1.MaterialsInstalled;
using Connector.HeavyJob.v1.MaterialsInstalled.Create;
using Connector.HeavyJob.v1.MaterialsReceived;
using Connector.HeavyJob.v1.MaterialsReceived.Create;
using Connector.HeavyJob.v1.MaterialSubsAndCustomCosts;
using Connector.HeavyJob.v1.MaterialSubsAndCustomCosts.Update;
using Connector.HeavyJob.v1.PayClass;
using Connector.HeavyJob.v1.PayClass.Update;
using Connector.HeavyJob.v1.PayItems;
using Connector.HeavyJob.v1.PayItems.Create;
using Connector.HeavyJob.v1.PayItems.Update;
using Connector.HeavyJob.v1.PurchaseOrders;
using Connector.HeavyJob.v1.PurchaseOrders.Create;
using Connector.HeavyJob.v1.PurchaseOrders.Update;
using Connector.HeavyJob.v1.QuantityAdjustment;
using Connector.HeavyJob.v1.QuantityAdjustment.Create;
using Connector.HeavyJob.v1.ReleaseOrderApprovalRule;
using Connector.HeavyJob.v1.ReleaseOrderApprovalRule.Delete;
using Connector.HeavyJob.v1.Subcontracts;
using Connector.HeavyJob.v1.Subcontracts.Create;
using Connector.HeavyJob.v1.Subcontracts.Delete;
using Connector.HeavyJob.v1.Subcontracts.Update;
using Connector.HeavyJob.v1.SubcontractTransactions;
using Connector.HeavyJob.v1.SubcontractTransactions.Create;
using Connector.HeavyJob.v1.TimeCard;
using Connector.HeavyJob.v1.TimeCard.Update;
using Connector.HeavyJob.v1.UserAccessGroup;
using Connector.HeavyJob.v1.UserAccessGroup.Create;
using Connector.HeavyJob.v1.UserAccessGroup.Update;
using Connector.HeavyJob.v1.VendorContractDetails;
using Connector.HeavyJob.v1.VendorContractDetails.Create;
using Connector.HeavyJob.v1.VendorContractDetails.Update;
using Connector.HeavyJob.v1.VendorContracts;
using Connector.HeavyJob.v1.VendorContracts.Create;
using Connector.HeavyJob.v1.VendorContracts.Update;
using Connector.HeavyJob.v1.Vendors;
using Connector.HeavyJob.v1.Vendors.Create;
using Connector.HeavyJob.v1.Vendors.Delete;
using Connector.HeavyJob.v1.Vendors.Update;
using Microsoft.Extensions.DependencyInjection;
using System;
using System.Text.Json;
using System.Text.Json.Serialization;
using Xchange.Connector.SDK.Abstraction.Hosting;
using Xchange.Connector.SDK.Action;

public class HeavyJobV1ActionProcessorServiceDefinition : BaseActionHandlerServiceDefinition<HeavyJobV1ActionProcessorConfig>
{
    public override string ModuleId => "heavyjob-1";
    public override Type ServiceType => typeof(GenericActionHandlerService<HeavyJobV1ActionProcessorConfig>);

    public override void ConfigureServiceDependencies(IServiceCollection serviceCollection, string serviceConfigJson)
    {
        var options = new JsonSerializerOptions
        {
            Converters =
            {
                new JsonStringEnumConverter()
            }
        };
        var serviceConfig = JsonSerializer.Deserialize<HeavyJobV1ActionProcessorConfig>(serviceConfigJson, options);
        serviceCollection.AddSingleton<HeavyJobV1ActionProcessorConfig>(serviceConfig!);
        serviceCollection.AddSingleton<GenericActionHandlerService<HeavyJobV1ActionProcessorConfig>>();
        serviceCollection.AddSingleton<IActionHandlerServiceDefinition<HeavyJobV1ActionProcessorConfig>>(this);
        // Register Action Handlers as scoped dependencies
        serviceCollection.AddScoped<CreateAdvancedBudgetMaterialHandler>();
        serviceCollection.AddScoped<CreateAdvancedBudgetSubcontractHandler>();
        serviceCollection.AddScoped<CreateAdvancedBudgetCustomCostTypeItemHandler>();
        serviceCollection.AddScoped<CreateAttachmentHandler>();
        // serviceCollection.AddScoped<CreateBulkCreateJobsRequestsHandler>();
        // serviceCollection.AddScoped<CreateBulkCreateJobsRequestHandler>();
        serviceCollection.AddScoped<UpdateBusinessUnitPreferenceHandler>();
        serviceCollection.AddScoped<DeleteChangeOrderHandler>();
        serviceCollection.AddScoped<CreateChangeOrderHandler>();
        serviceCollection.AddScoped<UpdateChangeOrderHandler>();
        serviceCollection.AddScoped<CreateJobCostsHandler>();
        serviceCollection.AddScoped<CreateJobCostsToDateHandler>();
        serviceCollection.AddScoped<CreateJobCostCustomCostHandler>();
        serviceCollection.AddScoped<UpdateCostCodeCostsHandler>();
        serviceCollection.AddScoped<CreateCostAdjustmentsHandler>();
        serviceCollection.AddScoped<UpdateCostAdjustmentsHandler>();
        serviceCollection.AddScoped<DeleteCostAdjustmentsHandler>();
        serviceCollection.AddScoped<CreateCostCodesHandler>();
        serviceCollection.AddScoped<UpdateCostCodesHandler>();
        serviceCollection.AddScoped<CreateCostCodeProgressHandler>();
        serviceCollection.AddScoped<DeleteCostCodeTagsHandler>();
        serviceCollection.AddScoped<UpdateCostCodeTagsHandler>();
        serviceCollection.AddScoped<CreateCostCodeTagsHandler>();
        serviceCollection.AddScoped<CreateCostCodeTransactionHandler>();
        serviceCollection.AddScoped<CreateCostCodeTransactionAdjustmentHandler>();
        // serviceCollection.AddScoped<UpdateCustomCostTypeItemReceivedHandler>();
        serviceCollection.AddScoped<CreateCostCategoriesHandler>();
        serviceCollection.AddScoped<CreateCustomCostTypeItemsHandler>();
        serviceCollection.AddScoped<UpdateCustomCostTypeItemsHandler>();
        serviceCollection.AddScoped<DeleteCustomCostTypeItemsHandler>();
        serviceCollection.AddScoped<CreateJobCustomCostTypeItemHandler>();
        serviceCollection.AddScoped<UpdateJobCustomCostTypeItemHandler>();
        serviceCollection.AddScoped<DeleteJobCustomCostTypeItemHandler>();
        serviceCollection.AddScoped<CreateCustomCostTypeInstalledHandler>();
        // serviceCollection.AddScoped<CreateCustomCostTypeReceivedHandler>();
        serviceCollection.AddScoped<CreateDiaryHandler>();
        // serviceCollection.AddScoped<CreateDiariesHandler>();
        serviceCollection.AddScoped<CreateEmployeesHandler>();
        serviceCollection.AddScoped<CreateEquipmentHandler>();
        serviceCollection.AddScoped<UpdateEquipmentHandler>();
        serviceCollection.AddScoped<CreateEquipmentTypeHandler>();
        serviceCollection.AddScoped<CreateEquipmentHoursHandler>();
        serviceCollection.AddScoped<UpdateJobsHandler>();
        serviceCollection.AddScoped<CreateJobsHandler>();
        serviceCollection.AddScoped<DeleteJobEmployeesHandler>();
        serviceCollection.AddScoped<UpdateJobEmployeesHandler>();
        serviceCollection.AddScoped<UpdateJobEquipmentHandler>();
        serviceCollection.AddScoped<DeleteJobEquipmentHandler>();
        serviceCollection.AddScoped<CreateMaterialsHandler>();
        serviceCollection.AddScoped<UpdateMaterialsHandler>();
        serviceCollection.AddScoped<DeleteMaterialsHandler>();
        serviceCollection.AddScoped<CreateJobMaterialHandler>();
        serviceCollection.AddScoped<UpdateJobMaterialHandler>();
        serviceCollection.AddScoped<DeleteJobMaterialHandler>();
        serviceCollection.AddScoped<CreateMaterialsInstalledHandler>();
        serviceCollection.AddScoped<CreateMaterialsReceivedHandler>();
        serviceCollection.AddScoped<UpdateMaterialSubsAndCustomCostsHandler>();
        serviceCollection.AddScoped<UpdatePayClassHandler>();
        serviceCollection.AddScoped<CreatePayItemsHandler>();
        serviceCollection.AddScoped<UpdatePayItemsHandler>();
        serviceCollection.AddScoped<CreatePurchaseOrdersHandler>();
        serviceCollection.AddScoped<UpdatePurchaseOrdersHandler>();
        serviceCollection.AddScoped<CreateMaterialPurchaseOrderDetailsHandler>();
        serviceCollection.AddScoped<UpdateMaterialPurchaseOrderDetailsHandler>();
        serviceCollection.AddScoped<CreateQuantityAdjustmentHandler>();
        serviceCollection.AddScoped<DeleteReleaseOrderApprovalRuleHandler>();
        serviceCollection.AddScoped<CreateSubcontractsHandler>();
        serviceCollection.AddScoped<UpdateSubcontractsHandler>();
        serviceCollection.AddScoped<DeleteSubcontractsHandler>();
        serviceCollection.AddScoped<CreateJobSubcontractHandler>();
        serviceCollection.AddScoped<UpdateJobSubcontractHandler>();
        serviceCollection.AddScoped<DeleteJobSubcontractHandler>();
        serviceCollection.AddScoped<CreateSubcontractTransactionsHandler>();
        serviceCollection.AddScoped<UpdateTimeCardHandler>();
        serviceCollection.AddScoped<CreateUserAccessGroupHandler>();
        serviceCollection.AddScoped<UpdateUserAccessGroupHandler>();
        serviceCollection.AddScoped<CreateVendorsHandler>();
        serviceCollection.AddScoped<UpdateVendorsHandler>();
        serviceCollection.AddScoped<DeleteVendorsHandler>();
        serviceCollection.AddScoped<CreateVendorContractsHandler>();
        serviceCollection.AddScoped<UpdateVendorContractsHandler>();
        serviceCollection.AddScoped<CreateVendorContractDetailsHandler>();
        serviceCollection.AddScoped<UpdateVendorContractDetailsHandler>();
        serviceCollection.AddScoped<DeleteEmployeesHandler>();
    }

    public override void ConfigureService(IActionHandlerService service, HeavyJobV1ActionProcessorConfig config)
    {
        // Register Action Handler configurations for the Action Processor Service
        service.RegisterHandlerForDataObjectAction<CreateAdvancedBudgetMaterialHandler, AdvancedBudgetMaterialDataObject>(ModuleId, "advanced-budget-material", "create", config.CreateAdvancedBudgetMaterialConfig);
        service.RegisterHandlerForDataObjectAction<CreateAdvancedBudgetSubcontractHandler, AdvancedBudgetSubcontractDataObject>(ModuleId, "advanced-budget-subcontract", "create", config.CreateAdvancedBudgetSubcontractConfig);
        service.RegisterHandlerForDataObjectAction<CreateAdvancedBudgetCustomCostTypeItemHandler, AdvancedBudgetCustomCostTypeItemDataObject>(ModuleId, "advanced-budget-custom-cost-type-item", "create", config.CreateAdvancedBudgetCustomCostTypeItemConfig);
        service.RegisterHandlerForDataObjectAction<CreateAttachmentHandler, AttachmentDataObject>(ModuleId, "attachment", "create", config.CreateAttachmentConfig);
        // service.RegisterHandlerForDataObjectAction<CreateBulkCreateJobsRequestsHandler, BulkCreateJobsRequestsDataObject>(ModuleId, "bulk-create-jobs-requests", "create", config.CreateBulkCreateJobsRequestsConfig);
        // service.RegisterHandlerForDataObjectAction<CreateBulkCreateJobsRequestHandler, BulkCreateJobsRequestDataObject>(ModuleId, "bulk-create-jobs-request", "create", config.CreateBulkCreateJobsRequestConfig);
        service.RegisterHandlerForDataObjectAction<UpdateBusinessUnitPreferenceHandler, BusinessUnitPreferenceDataObject>(ModuleId, "business-unit-preference", "update", config.UpdateBusinessUnitPreferenceConfig);
        service.RegisterHandlerForDataObjectAction<DeleteChangeOrderHandler, ChangeOrderDataObject>(ModuleId, "change-order", "delete", config.DeleteChangeOrderConfig);
        service.RegisterHandlerForDataObjectAction<CreateChangeOrderHandler, ChangeOrderDataObject>(ModuleId, "change-order", "create", config.CreateChangeOrderConfig);
        service.RegisterHandlerForDataObjectAction<UpdateChangeOrderHandler, ChangeOrderDataObject>(ModuleId, "change-order", "update", config.UpdateChangeOrderConfig);
        service.RegisterHandlerForDataObjectAction<CreateJobCostsHandler, JobCostsDataObject>(ModuleId, "job-costs", "create", config.CreateJobCostsConfig);
        service.RegisterHandlerForDataObjectAction<CreateJobCostsToDateHandler, JobCostsToDateDataObject>(ModuleId, "job-costs-to-date", "create", config.CreateJobCostsToDateConfig);
        service.RegisterHandlerForDataObjectAction<CreateJobCostCustomCostHandler, JobCostCustomCostDataObject>(ModuleId, "job-cost-custom-cost", "create", config.CreateJobCostCustomCostConfig);
        service.RegisterHandlerForDataObjectAction<UpdateCostCodeCostsHandler, CostCodeCostsDataObject>(ModuleId, "cost-code-costs", "update", config.UpdateCostCodeCostsConfig);
        service.RegisterHandlerForDataObjectAction<CreateCostAdjustmentsHandler, CostAdjustmentsDataObject>(ModuleId, "cost-adjustments", "create", config.CreateCostAdjustmentsConfig);
        service.RegisterHandlerForDataObjectAction<UpdateCostAdjustmentsHandler, CostAdjustmentsDataObject>(ModuleId, "cost-adjustments", "update", config.UpdateCostAdjustmentsConfig);
        service.RegisterHandlerForDataObjectAction<DeleteCostAdjustmentsHandler, CostAdjustmentsDataObject>(ModuleId, "cost-adjustments", "delete", config.DeleteCostAdjustmentsConfig);
        service.RegisterHandlerForDataObjectAction<CreateCostCodesHandler, CostCodesDataObject>(ModuleId, "cost-codes", "create", config.CreateCostCodesConfig);
        service.RegisterHandlerForDataObjectAction<UpdateCostCodesHandler, CostCodesDataObject>(ModuleId, "cost-codes", "update", config.UpdateCostCodesConfig);
        service.RegisterHandlerForDataObjectAction<CreateCostCodeProgressHandler, CostCodeProgressDataObject>(ModuleId, "cost-code-progress", "create", config.CreateCostCodeProgressConfig);
        service.RegisterHandlerForDataObjectAction<DeleteCostCodeTagsHandler, CostCodeTagsDataObject>(ModuleId, "cost-code-tags", "delete", config.DeleteCostCodeTagsConfig);
        service.RegisterHandlerForDataObjectAction<UpdateCostCodeTagsHandler, CostCodeTagsDataObject>(ModuleId, "cost-code-tags", "update", config.UpdateCostCodeTagsConfig);
        service.RegisterHandlerForDataObjectAction<CreateCostCodeTagsHandler, CostCodeTagsDataObject>(ModuleId, "cost-code-tags", "create", config.CreateCostCodeTagsConfig);
        service.RegisterHandlerForDataObjectAction<CreateCostCodeTransactionHandler, CostCodeTransactionDataObject>(ModuleId, "cost-code-transaction", "create", config.CreateCostCodeTransactionConfig);
        service.RegisterHandlerForDataObjectAction<CreateCostCodeTransactionAdjustmentHandler, CostCodeTransactionAdjustmentDataObject>(ModuleId, "cost-code-transaction-adjustment", "create", config.CreateCostCodeTransactionAdjustmentConfig);
        // service.RegisterHandlerForDataObjectAction<UpdateCustomCostTypeItemReceivedHandler, CustomCostTypeItemReceivedDataObject>(ModuleId, "custom-cost-type-item-received", "update", config.UpdateCustomCostTypeItemReceivedConfig);
        service.RegisterHandlerForDataObjectAction<CreateCostCategoriesHandler, CostCategoriesDataObject>(ModuleId, "cost-categories", "create", config.CreateCostCategoriesConfig);
        service.RegisterHandlerForDataObjectAction<CreateCustomCostTypeItemsHandler, CustomCostTypeItemsDataObject>(ModuleId, "custom-cost-type-items", "create", config.CreateCustomCostTypeItemsConfig);
        service.RegisterHandlerForDataObjectAction<UpdateCustomCostTypeItemsHandler, CustomCostTypeItemsDataObject>(ModuleId, "custom-cost-type-items", "update", config.UpdateCustomCostTypeItemsConfig);
        service.RegisterHandlerForDataObjectAction<DeleteCustomCostTypeItemsHandler, CustomCostTypeItemsDataObject>(ModuleId, "custom-cost-type-items", "delete", config.DeleteCustomCostTypeItemsConfig);
        service.RegisterHandlerForDataObjectAction<CreateJobCustomCostTypeItemHandler, JobCustomCostTypeItemDataObject>(ModuleId, "job-custom-cost-type-item", "create", config.CreateJobCustomCostTypeItemConfig);
        service.RegisterHandlerForDataObjectAction<UpdateJobCustomCostTypeItemHandler, JobCustomCostTypeItemDataObject>(ModuleId, "job-custom-cost-type-item", "update", config.UpdateJobCustomCostTypeItemConfig);
        service.RegisterHandlerForDataObjectAction<DeleteJobCustomCostTypeItemHandler, JobCustomCostTypeItemDataObject>(ModuleId, "job-custom-cost-type-item", "delete", config.DeleteJobCustomCostTypeItemConfig);
        service.RegisterHandlerForDataObjectAction<CreateCustomCostTypeInstalledHandler, CustomCostTypeInstalledDataObject>(ModuleId, "custom-cost-type-installed", "create", config.CreateCustomCostTypeInstalledConfig);
        // service.RegisterHandlerForDataObjectAction<CreateCustomCostTypeReceivedHandler, CustomCostTypeReceivedDataObject>(ModuleId, "custom-cost-type-received", "create", config.CreateCustomCostTypeReceivedConfig);
        service.RegisterHandlerForDataObjectAction<CreateDiaryHandler, DiaryDataObject>(ModuleId, "diary", "create", config.CreateDiaryConfig);
        // service.RegisterHandlerForDataObjectAction<CreateDiariesHandler, DiariesDataObject>(ModuleId, "diaries", "create", config.CreateDiariesConfig);
        service.RegisterHandlerForDataObjectAction<CreateEmployeesHandler, EmployeesDataObject>(ModuleId, "employees", "create", config.CreateEmployeesConfig);
        service.RegisterHandlerForDataObjectAction<CreateEquipmentHandler, EquipmentDataObject>(ModuleId, "equipment", "create", config.CreateEquipmentConfig);
        service.RegisterHandlerForDataObjectAction<UpdateEquipmentHandler, EquipmentDataObject>(ModuleId, "equipment", "update", config.UpdateEquipmentConfig);
        service.RegisterHandlerForDataObjectAction<CreateEquipmentTypeHandler, EquipmentTypeDataObject>(ModuleId, "equipment-type", "create", config.CreateEquipmentTypeConfig);
        service.RegisterHandlerForDataObjectAction<CreateEquipmentHoursHandler, EquipmentHoursDataObject>(ModuleId, "equipment-hours", "create", config.CreateEquipmentHoursConfig);
        service.RegisterHandlerForDataObjectAction<UpdateJobsHandler, JobsDataObject>(ModuleId, "jobs", "update", config.UpdateJobsConfig);
        service.RegisterHandlerForDataObjectAction<CreateJobsHandler, JobsDataObject>(ModuleId, "jobs", "create", config.CreateJobsConfig);
        service.RegisterHandlerForDataObjectAction<DeleteJobEmployeesHandler, JobEmployeesDataObject>(ModuleId, "job-employees", "delete", config.DeleteJobEmployeesConfig);
        service.RegisterHandlerForDataObjectAction<UpdateJobEmployeesHandler, JobEmployeesDataObject>(ModuleId, "job-employees", "update", config.UpdateJobEmployeesConfig);
        service.RegisterHandlerForDataObjectAction<UpdateJobEquipmentHandler, JobEquipmentDataObject>(ModuleId, "job-equipment", "update", config.UpdateJobEquipmentConfig);
        service.RegisterHandlerForDataObjectAction<DeleteJobEquipmentHandler, JobEquipmentDataObject>(ModuleId, "job-equipment", "delete", config.DeleteJobEquipmentConfig);
        service.RegisterHandlerForDataObjectAction<CreateMaterialsHandler, MaterialsDataObject>(ModuleId, "materials", "create", config.CreateMaterialsConfig);
        service.RegisterHandlerForDataObjectAction<UpdateMaterialsHandler, MaterialsDataObject>(ModuleId, "materials", "update", config.UpdateMaterialsConfig);
        service.RegisterHandlerForDataObjectAction<DeleteMaterialsHandler, MaterialsDataObject>(ModuleId, "materials", "delete", config.DeleteMaterialsConfig);
        service.RegisterHandlerForDataObjectAction<CreateJobMaterialHandler, JobMaterialDataObject>(ModuleId, "job-material", "create", config.CreateJobMaterialConfig);
        service.RegisterHandlerForDataObjectAction<UpdateJobMaterialHandler, JobMaterialDataObject>(ModuleId, "job-material", "update", config.UpdateJobMaterialConfig);
        service.RegisterHandlerForDataObjectAction<DeleteJobMaterialHandler, JobMaterialDataObject>(ModuleId, "job-material", "delete", config.DeleteJobMaterialConfig);
        service.RegisterHandlerForDataObjectAction<CreateMaterialsInstalledHandler, MaterialsInstalledDataObject>(ModuleId, "materials-installed", "create", config.CreateMaterialsInstalledConfig);
        service.RegisterHandlerForDataObjectAction<CreateMaterialsReceivedHandler, MaterialsReceivedDataObject>(ModuleId, "materials-received", "create", config.CreateMaterialsReceivedConfig);
        service.RegisterHandlerForDataObjectAction<UpdateMaterialSubsAndCustomCostsHandler, MaterialSubsAndCustomCostsDataObject>(ModuleId, "material-subs-and-custom-costs", "update", config.UpdateMaterialSubsAndCustomCostsConfig);
        service.RegisterHandlerForDataObjectAction<UpdatePayClassHandler, PayClassDataObject>(ModuleId, "pay-class", "update", config.UpdatePayClassConfig);
        service.RegisterHandlerForDataObjectAction<CreatePayItemsHandler, PayItemsDataObject>(ModuleId, "pay-items", "create", config.CreatePayItemsConfig);
        service.RegisterHandlerForDataObjectAction<UpdatePayItemsHandler, PayItemsDataObject>(ModuleId, "pay-items", "update", config.UpdatePayItemsConfig);
        service.RegisterHandlerForDataObjectAction<CreatePurchaseOrdersHandler, PurchaseOrdersDataObject>(ModuleId, "purchase-orders", "create", config.CreatePurchaseOrdersConfig);
        service.RegisterHandlerForDataObjectAction<UpdatePurchaseOrdersHandler, PurchaseOrdersDataObject>(ModuleId, "purchase-orders", "update", config.UpdatePurchaseOrdersConfig);
        service.RegisterHandlerForDataObjectAction<CreateMaterialPurchaseOrderDetailsHandler, MaterialPurchaseOrderDetailsDataObject>(ModuleId, "material-purchase-order-details", "create", config.CreateMaterialPurchaseOrderDetailsConfig);
        service.RegisterHandlerForDataObjectAction<UpdateMaterialPurchaseOrderDetailsHandler, MaterialPurchaseOrderDetailsDataObject>(ModuleId, "material-purchase-order-details", "update", config.UpdateMaterialPurchaseOrderDetailsConfig);
        service.RegisterHandlerForDataObjectAction<CreateQuantityAdjustmentHandler, QuantityAdjustmentDataObject>(ModuleId, "quantity-adjustment", "create", config.CreateQuantityAdjustmentConfig);
        service.RegisterHandlerForDataObjectAction<DeleteReleaseOrderApprovalRuleHandler, ReleaseOrderApprovalRuleDataObject>(ModuleId, "release-order-approval-rule", "delete", config.DeleteReleaseOrderApprovalRuleConfig);
        service.RegisterHandlerForDataObjectAction<CreateSubcontractsHandler, SubcontractsDataObject>(ModuleId, "subcontracts", "create", config.CreateSubcontractsConfig);
        service.RegisterHandlerForDataObjectAction<UpdateSubcontractsHandler, SubcontractsDataObject>(ModuleId, "subcontracts", "update", config.UpdateSubcontractsConfig);
        service.RegisterHandlerForDataObjectAction<DeleteSubcontractsHandler, SubcontractsDataObject>(ModuleId, "subcontracts", "delete", config.DeleteSubcontractsConfig);
        service.RegisterHandlerForDataObjectAction<CreateJobSubcontractHandler, JobSubcontractDataObject>(ModuleId, "job-subcontract", "create", config.CreateJobSubcontractConfig);
        service.RegisterHandlerForDataObjectAction<UpdateJobSubcontractHandler, JobSubcontractDataObject>(ModuleId, "job-subcontract", "update", config.UpdateJobSubcontractConfig);
        service.RegisterHandlerForDataObjectAction<DeleteJobSubcontractHandler, JobSubcontractDataObject>(ModuleId, "job-subcontract", "delete", config.DeleteJobSubcontractConfig);
        service.RegisterHandlerForDataObjectAction<CreateSubcontractTransactionsHandler, SubcontractTransactionsDataObject>(ModuleId, "subcontract-transactions", "create", config.CreateSubcontractTransactionsConfig);
        service.RegisterHandlerForDataObjectAction<UpdateTimeCardHandler, TimeCardDataObject>(ModuleId, "time-card", "update", config.UpdateTimeCardConfig);
        service.RegisterHandlerForDataObjectAction<CreateUserAccessGroupHandler, UserAccessGroupDataObject>(ModuleId, "user-access-group", "create", config.CreateUserAccessGroupConfig);
        service.RegisterHandlerForDataObjectAction<UpdateUserAccessGroupHandler, UserAccessGroupDataObject>(ModuleId, "user-access-group", "update", config.UpdateUserAccessGroupConfig);
        service.RegisterHandlerForDataObjectAction<CreateVendorsHandler, VendorsDataObject>(ModuleId, "vendors", "create", config.CreateVendorsConfig);
        service.RegisterHandlerForDataObjectAction<UpdateVendorsHandler, VendorsDataObject>(ModuleId, "vendors", "update", config.UpdateVendorsConfig);
        service.RegisterHandlerForDataObjectAction<DeleteVendorsHandler, VendorsDataObject>(ModuleId, "vendors", "delete", config.DeleteVendorsConfig);
        service.RegisterHandlerForDataObjectAction<CreateVendorContractsHandler, VendorContractsDataObject>(ModuleId, "vendor-contracts", "create", config.CreateVendorContractsConfig);
        service.RegisterHandlerForDataObjectAction<UpdateVendorContractsHandler, VendorContractsDataObject>(ModuleId, "vendor-contracts", "update", config.UpdateVendorContractsConfig);
        service.RegisterHandlerForDataObjectAction<CreateVendorContractDetailsHandler, VendorContractDetailsDataObject>(ModuleId, "vendor-contract-details", "create", config.CreateVendorContractDetailsConfig);
        service.RegisterHandlerForDataObjectAction<UpdateVendorContractDetailsHandler, VendorContractDetailsDataObject>(ModuleId, "vendor-contract-details", "update", config.UpdateVendorContractDetailsConfig);
        service.RegisterHandlerForDataObjectAction<DeleteEmployeesHandler, EmployeesDataObject>(ModuleId, "employees", "delete", config.DeleteEmployeesConfig);
    }
}